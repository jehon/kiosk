
import serverAppFactory from '../../server/server-app.js';

import fs from 'fs';
import path from 'path';

/**
 * @typedef ImageData
 * @param {string} subPath relative to the folderConfig home
 * @param {string} path is subPath concatenated with folderConfig path
 * @param {FolderConfig} folderConfig where the file has been defined
 * @param {string} data.title from exiv
 * @param {string} data.date from exiv
 * @param {number} data.orientation from exiv
 *
 * {
 *   subPath: 'f1/i1.png',
 *   path: 'tests/server/data/photo-frame/f1/i1.png',
 *   data: {
 *	   title: 'Test title here',
 *	   date: '2019-07-01 02:03:04',
 *	   orientation: 0
 * }
 */

/**
 * @type {module:server/ServerApp}
 */
const app = serverAppFactory('photo-frame');

export default app;

/**
 * 
 * index.json: generated by file-selector:
 * 
 * - originalFilePath: where the file was
 * - subPath: where the file actually is
 * - title
 * - date
 * - orientation
 * 
 */

export async function loadList(folder) {
	let listing = [];
	try {
		const indexFile = path.join(folder, 'index.json');
		const txt = fs.readFileSync(indexFile);
		listing = JSON.parse(txt).map(v => ({
			...v,
			url: path.join('..', folder, v.subPath)
		}));
	} catch (e) {
		app.error(`Could not load from ${folder}`);
		// ok
	}
	app.setState({
		hasList: listing.length > 0,
		listing
	});

	return listing;
}

/**
 * Initialize the package
 *
 * @returns {module:server/ServerApp} the app
 */
export function init() {
	app.setState({
		hasList: false,
		listing: []
	});

	loadList(app.getConfig('.folder'));

	return app;
}

init();
